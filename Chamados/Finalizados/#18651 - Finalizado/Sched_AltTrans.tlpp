#include "rwmake.ch"
#include "totvs.ch"
#include "protheus.ch"
#include "topconn.ch"
#include "TBICONN.ch"

/*/{Protheus.doc} xSchedAltTranspF
(Função para alterar as transportadoras quand é alterado na FreteFy)
@type user function
@author Joao gomes
@since 30/08/2024
@version version
@example
(examples)
@see (links_or_references)
/*/
User Function xSchedAltTranspF()
	Local cPedido
	Local oResp
	Local oResp1
	Local oResp2
	Local cIdTranspFF
	Local aArea := FWGetArea()
	Local oClassFret := GetDadosFretefy.DadosFretefy():New()
	Local cQry := ""
	Local cNewTransp
	Local cNewCGC


	cQry += "SELECT C5_FILIAL, C5_NUM, C5_TRANSP, C5_XFTRANS, C5_XFRETEF FROM SC5030" + CRLF
	cQry += "WHERE D_E_L_E_T_ <> '*' " + CRLF
	cQry += "AND C5_BLQ = '' " + CRLF
	cQry += "AND C5_NOTA = '' " + CRLF
	cQry += "AND C5_LIBEROK <> '' " + CRLF
	cQry += "AND C5_XFRETEF = 'S' " + CRLF
	cQry += "AND C5_XFTRANS <> ''"

	If Select("CQRY") <> 0
		DbSelectArea("CQRY")
		DbCloseArea()
	EndIf

	TCQuery cQry New Alias "CQRY"

	While CQRY->(!Eof())

		cPedido := CQRY->C5_NUM

		//Get na primeira API para pegar os dados do pedido
		oResp := oClassFret:GetPedido(cPedido)
		oResp1 := oResp:getJsonObject('Json')
		If ValType(oResp1) != 'J'
			//MsgInfo('Pedido '+ cPedido +' não encontrado na FreteFy')
			CQRY->(DBSkip())
		Else
			cIdTranspFF := oResp1:getJsonObject('id')

			//Get na segunda API utilizando ID do pedido para buscar a transportadora
			oResp := oClassFret:GetTransp(cIdTranspFF)
			oResp1 := oResp:getJsonObject('Json')
			oResp2 := oResp1:getJsonObject('transportador')
			cNewCGC := oResp2:getJsonObject('documento')

			//Consulta na SA4 com o CNPJ da transportadora para pegar o novo codigo.
			DbSelectArea('SA4')
			SA4->(DbSetOrder(3))
			If SA4->(DbSeek(xFilial("SA4")+cNewCGC))
				cNewTransp := SA4->A4_COD
			else
				MsgInfo("Transportadora não encontrada","Transp not found")
			EndIf


			If cNewTransp != CQRY->C5_TRANSP
				DbSelectArea("SC5")
				DbSetOrder(1)
				If SC5->(DbSeek(CQRY->C5_FILIAL+CQRY->C5_NUM))
					If RecLock('SC5',.F.)
					    SC5->C5_XFTRANS := cNewTransp //Atualização da transportadora
					    SC5->C5_TRANSP  := cNewTransp
					    SC5->(MsUnlock())
                        MsgInfo('Pedido '+ cPedido +' atualizado no protheus','Pedido')
                    Else
                        MsgInfo('Pedido '+ cPedido +' não pode ser atualizado','Pedido')
                    EndIf
				EndIf
			EndIf
			CQRY->(DBSkip())
		EndIf
	End

	MsgInfo("Execução do programa finalizada","Fim da execução")
	FWRestArea(aArea)
Return
